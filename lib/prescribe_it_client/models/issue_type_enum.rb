=begin
#PrescribeIT SDK REST API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 5.0.27

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.4.0-SNAPSHOT

=end

require 'date'
require 'time'

module PrescribeItClient
  class IssueTypeEnum
    BUSINESS_RULE = "BUSINESS_RULE".freeze
    CODE_INVALID = "CODE_INVALID".freeze
    CONFLICT = "CONFLICT".freeze
    DUPLICATE = "DUPLICATE".freeze
    EXCEPTION = "EXCEPTION".freeze
    EXPIRED = "EXPIRED".freeze
    EXTENSION = "EXTENSION".freeze
    FORBIDDEN = "FORBIDDEN".freeze
    INCOMPLETE = "INCOMPLETE".freeze
    INFORMATIONAL = "INFORMATIONAL".freeze
    INVALID = "INVALID".freeze
    INVARIANT = "INVARIANT".freeze
    LOCK_ERROR = "LOCK_ERROR".freeze
    LOGIN = "LOGIN".freeze
    NO_STORE = "NO_STORE".freeze
    NOT_FOUND = "NOT_FOUND".freeze
    NOT_SUPPORTED = "NOT_SUPPORTED".freeze
    PROCESSING = "PROCESSING".freeze
    REQUIRED = "REQUIRED".freeze
    SECURITY = "SECURITY".freeze
    STRUCTURE = "STRUCTURE".freeze
    SUPPRESSED = "SUPPRESSED".freeze
    THROTTLED = "THROTTLED".freeze
    TIMEOUT = "TIMEOUT".freeze
    TOO_COSTLY = "TOO_COSTLY".freeze
    TOO_LONG = "TOO_LONG".freeze
    TRANSIENT = "TRANSIENT".freeze
    UNKNOWN = "UNKNOWN".freeze
    VALUE = "VALUE".freeze

    def self.all_vars
      @all_vars ||= [BUSINESS_RULE, CODE_INVALID, CONFLICT, DUPLICATE, EXCEPTION, EXPIRED, EXTENSION, FORBIDDEN, INCOMPLETE, INFORMATIONAL, INVALID, INVARIANT, LOCK_ERROR, LOGIN, NO_STORE, NOT_FOUND, NOT_SUPPORTED, PROCESSING, REQUIRED, SECURITY, STRUCTURE, SUPPRESSED, THROTTLED, TIMEOUT, TOO_COSTLY, TOO_LONG, TRANSIENT, UNKNOWN, VALUE].freeze
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def self.build_from_hash(value)
      new.build_from_hash(value)
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def build_from_hash(value)
      return value if IssueTypeEnum.all_vars.include?(value)
      raise "Invalid ENUM value #{value} for class #IssueTypeEnum"
    end
  end
end
