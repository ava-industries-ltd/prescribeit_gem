=begin
#PrescribeIT SDK REST API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 5.0.27

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.53
=end

require 'spec_helper'
require 'json'

# Unit tests for PrescribeItClient::DefaultApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @instance = PrescribeItClient::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instance of DefaultApi' do
      expect(@instance).to be_instance_of(PrescribeItClient::DefaultApi)
    end
  end

  # unit tests for emr_acknowledge_post
  # @param [Hash] opts the optional parameters
  # @option opts [String] :body 
  # @return [TransportResponse]
  describe 'emr_acknowledge_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emr_attachment_upload_post
  # @param [Hash] opts the optional parameters
  # @option opts [String] :id 
  # @option opts [String] :content_type 
  # @option opts [String] :file 
  # @return [TransportResponse]
  describe 'emr_attachment_upload_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emr_formulary_request_post
  # @param [Hash] opts the optional parameters
  # @option opts [FormularyRequestParameters] :body 
  # @return [TransportResponse]
  describe 'emr_formulary_request_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emr_poll_inbox_get
  # @param [Hash] opts the optional parameters
  # @return [TransportResponse]
  describe 'emr_poll_inbox_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emr_registry_search_organization_bulk_by_fax_post
  # @param [Hash] opts the optional parameters
  # @option opts [PharmacyBulkSearchByFaxParameters] :body 
  # @return [TransportResponse]
  describe 'emr_registry_search_organization_bulk_by_fax_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emr_registry_search_organization_bulk_by_ids_post
  # @param [Hash] opts the optional parameters
  # @option opts [PharmacyBulkSearchByIdParameters] :body 
  # @return [TransportResponse]
  describe 'emr_registry_search_organization_bulk_by_ids_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emr_registry_search_organization_by_id_post
  # @param [Hash] opts the optional parameters
  # @option opts [EmrRegistrySearchOrganizationByIdQueryParameters] :body 
  # @return [TransportResponse]
  describe 'emr_registry_search_organization_by_id_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emr_registry_search_organization_discrete_post
  # @param [Hash] opts the optional parameters
  # @option opts [EmrRegistrySearchOrganizationDiscreteQueryParameters] :body 
  # @return [TransportResponse]
  describe 'emr_registry_search_organization_discrete_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emr_registry_search_organization_elastic_post
  # @param [Hash] opts the optional parameters
  # @option opts [EmrRegistrySearchOrganizationElasticQueryParameters] :body 
  # @return [TransportResponse]
  describe 'emr_registry_search_organization_elastic_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emr_registry_search_practitioner_by_id_post
  # @param [Hash] opts the optional parameters
  # @option opts [EmrRegistrySearchPractitionerByIdQueryParameters] :body 
  # @return [TransportResponse]
  describe 'emr_registry_search_practitioner_by_id_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emr_registry_search_practitioner_discrete_post
  # @param [Hash] opts the optional parameters
  # @option opts [EmrRegistrySearchPractitionerDiscreteQueryParameters] :body 
  # @return [TransportResponse]
  describe 'emr_registry_search_practitioner_discrete_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emr_registry_search_practitioner_elastic_post
  # @param [Hash] opts the optional parameters
  # @option opts [EmrRegistrySearchPractitionerElasticQueryParameters] :body 
  # @return [TransportResponse]
  describe 'emr_registry_search_practitioner_elastic_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emr_request_otp_post
  # @param [Hash] opts the optional parameters
  # @option opts [RequestOtpParameters] :body 
  # @return [TransportResponse]
  describe 'emr_request_otp_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emr_request_saml_token_post
  # @param [Hash] opts the optional parameters
  # @option opts [RequestSamlTokenParameters] :body 
  # @return [TransportResponse]
  describe 'emr_request_saml_token_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emr_request_saml_token_with_ext_token_post
  # @param [Hash] opts the optional parameters
  # @option opts [RequestSamlTokenWithExternalTokenParameters] :body 
  # @return [TransportResponse]
  describe 'emr_request_saml_token_with_ext_token_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emr_submit_to_inbox_post
  # @param [Hash] opts the optional parameters
  # @option opts [String] :body 
  # @return [TransportResponse]
  describe 'emr_submit_to_inbox_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emr_transform_from_xml_formulary_post
  # @param [Hash] opts the optional parameters
  # @option opts [String] :body 
  # @return [Formulary]
  describe 'emr_transform_from_xml_formulary_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emr_transform_from_xml_notification_post
  # @param [Hash] opts the optional parameters
  # @option opts [String] :body 
  # @return [NotificationMessageIssue]
  describe 'emr_transform_from_xml_notification_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emr_transform_from_xml_post
  # @param [Hash] opts the optional parameters
  # @option opts [String] :body 
  # @return [InboxMessageResponse]
  describe 'emr_transform_from_xml_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emr_transform_from_xml_search_post
  # @param [Hash] opts the optional parameters
  # @option opts [String] :body 
  # @return [ProviderRegistrySearchResponse]
  describe 'emr_transform_from_xml_search_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emr_transform_to_xml_acknowledgment_post
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :body 
  # @return [String]
  describe 'emr_transform_to_xml_acknowledgment_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emr_transform_to_xml_clinician_communication_post
  # @param [Hash] opts the optional parameters
  # @option opts [ClinicianCommunication] :body 
  # @return [String]
  describe 'emr_transform_to_xml_clinician_communication_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emr_transform_to_xml_emr_cancel_request_post
  # @param [Hash] opts the optional parameters
  # @option opts [EmrCancelRequest] :body 
  # @return [String]
  describe 'emr_transform_to_xml_emr_cancel_request_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emr_transform_to_xml_emr_deferred_request_post
  # @param [Hash] opts the optional parameters
  # @option opts [EmrDeferredRequest] :body 
  # @return [String]
  describe 'emr_transform_to_xml_emr_deferred_request_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emr_transform_to_xml_emr_request_post
  # @param [Hash] opts the optional parameters
  # @option opts [EmrRequest] :body 
  # @return [String]
  describe 'emr_transform_to_xml_emr_request_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emr_transform_to_xml_notification_message_post
  # @param [Hash] opts the optional parameters
  # @option opts [NotificationMessage] :body 
  # @return [String]
  describe 'emr_transform_to_xml_notification_message_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pms_acknowledge_deferred_post
  # @param [Hash] opts the optional parameters
  # @option opts [AcknowledgeDeferredParameters] :body 
  # @return [TransportResponse]
  describe 'pms_acknowledge_deferred_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pms_acknowledge_post
  # @param [Hash] opts the optional parameters
  # @option opts [String] :body 
  # @return [TransportResponse]
  describe 'pms_acknowledge_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pms_attachment_upload_post
  # @param [Hash] opts the optional parameters
  # @option opts [String] :id 
  # @option opts [String] :content_type 
  # @option opts [String] :file 
  # @return [TransportResponse]
  describe 'pms_attachment_upload_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pms_poll_inbox_get
  # @param [Hash] opts the optional parameters
  # @return [TransportResponse]
  describe 'pms_poll_inbox_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pms_receive_deferred_post
  # @param [Hash] opts the optional parameters
  # @option opts [PmsDeferredQueryParameters] :body 
  # @return [TransportResponse]
  describe 'pms_receive_deferred_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pms_registry_search_organization_by_id_post
  # @param [Hash] opts the optional parameters
  # @option opts [OrganizationIdSearchParameters] :body 
  # @return [TransportResponse]
  describe 'pms_registry_search_organization_by_id_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pms_registry_search_organization_discrete_post
  # @param [Hash] opts the optional parameters
  # @option opts [OrganizationSearchParameters] :body 
  # @return [TransportResponse]
  describe 'pms_registry_search_organization_discrete_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pms_registry_search_organization_elastic_post
  # @param [Hash] opts the optional parameters
  # @option opts [OrganizationElasticSearchParameters] :body 
  # @return [TransportResponse]
  describe 'pms_registry_search_organization_elastic_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pms_registry_search_practitioner_by_id_post
  # @param [Hash] opts the optional parameters
  # @option opts [PractitionerIdSearchParameters] :body 
  # @return [TransportResponse]
  describe 'pms_registry_search_practitioner_by_id_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pms_registry_search_search_practitioner_discrete_post
  # @param [Hash] opts the optional parameters
  # @option opts [PractitionerSearchParameters] :body 
  # @return [TransportResponse]
  describe 'pms_registry_search_search_practitioner_discrete_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pms_registry_search_search_practitioner_elastic_post
  # @param [Hash] opts the optional parameters
  # @option opts [PractitionerElasticSearchParameters] :body 
  # @return [TransportResponse]
  describe 'pms_registry_search_search_practitioner_elastic_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pms_submit_to_inbox_post
  # @param [Hash] opts the optional parameters
  # @option opts [String] :body 
  # @return [TransportResponse]
  describe 'pms_submit_to_inbox_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pms_transform_from_xml_notification_post
  # @param [Hash] opts the optional parameters
  # @option opts [String] :body 
  # @return [NotificationMessageIssue]
  describe 'pms_transform_from_xml_notification_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pms_transform_from_xml_post
  # @param [Hash] opts the optional parameters
  # @option opts [String] :body 
  # @return [InboxMessageResponse]
  describe 'pms_transform_from_xml_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pms_transform_from_xml_search_post
  # @param [Hash] opts the optional parameters
  # @option opts [String] :body 
  # @return [ProviderRegistrySearchResponse]
  describe 'pms_transform_from_xml_search_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pms_transform_to_xml_acknowledgment_post
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :body 
  # @return [String]
  describe 'pms_transform_to_xml_acknowledgment_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pms_transform_to_xml_clinician_communication_post
  # @param [Hash] opts the optional parameters
  # @option opts [ClinicianCommunication] :body 
  # @return [String]
  describe 'pms_transform_to_xml_clinician_communication_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pms_transform_to_xml_notification_message_post
  # @param [Hash] opts the optional parameters
  # @option opts [NotificationMessage] :body 
  # @return [String]
  describe 'pms_transform_to_xml_notification_message_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pms_transform_to_xml_pms_adapt_request_post
  # @param [Hash] opts the optional parameters
  # @option opts [PmsAdaptRequest] :body 
  # @return [String]
  describe 'pms_transform_to_xml_pms_adapt_request_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pms_transform_to_xml_pms_cancel_response_post
  # @param [Hash] opts the optional parameters
  # @option opts [PmsCancelResponse] :body 
  # @return [String]
  describe 'pms_transform_to_xml_pms_cancel_response_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pms_transform_to_xml_pms_dispense_cancel_notification_post
  # @param [Hash] opts the optional parameters
  # @option opts [PmsDispenseCancelNotification] :body 
  # @return [String]
  describe 'pms_transform_to_xml_pms_dispense_cancel_notification_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pms_transform_to_xml_pms_dispense_notification_post
  # @param [Hash] opts the optional parameters
  # @option opts [PmsDispenseNotification] :body 
  # @return [String]
  describe 'pms_transform_to_xml_pms_dispense_notification_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pms_transform_to_xml_pms_prescribe_request_post
  # @param [Hash] opts the optional parameters
  # @option opts [PmsPrescribeRequest] :body 
  # @return [String]
  describe 'pms_transform_to_xml_pms_prescribe_request_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pms_transform_to_xml_pms_renewal_request_post
  # @param [Hash] opts the optional parameters
  # @option opts [PmsRenewalRequest] :body 
  # @return [String]
  describe 'pms_transform_to_xml_pms_renewal_request_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
